<?phpclass Roles_model extends CI_Model {    public function __construct() {        $this->load->database();    }     public function buscar_roles($data) {        $arrayParametros = array();        $arrayParametros['rol'] = $data['rol'] != '' ? '%' . $data['rol'] . '%' : NULL;        $this->db->select('*');        $this->db->from('admin_roles');        if ($arrayParametros['rol'] != NULL) {            $this->db->where('admin_roles.ROL like', $arrayParametros['rol']);        }        $consulta = $this->db->get();        $resultado = $consulta->result_array();        return $resultado;     }      public function obtener_datos_rol($idRoll = NUll) {        if($idRoll == NUll)        {            return NULL;        }        else {                $this->db->select("*");                $this->db->from('admin_roles');                       $this->db->where('admin_roles.ID_ROL',$idRoll);                       $consulta = $this->db->get();                $rol = $consulta->row_array();                return $rol;         }                 }        public function crearRol($data) {        $this->db->insert('admin_roles', $data);        return $this->db->insert_id();    }    public function actualizarRol($data,$idRol) {        $this->db->where('admin_roles.ID_ROL', $idRol);        $this->db->update('admin_roles', $data);    }        public function agregarFuncionalidadesARol($idRol,$data) {        if(isset($data['CLIENTES']) && isset($data['CLIENTES']['FUNCIONALIDAD']))        {        $roles = array();        foreach ($data['CLIENTES']['FUNCIONALIDAD'] as $funcionalidad) {           $roles[] = array('ID_ROL'=>$idRol,'ID_FUNCIONALIDAD'=>$funcionalidad );        }        $this->db->insert_batch('admin_rol_funcionalidad', $roles);        }        if(isset($data['FACTURACION']) && isset($data['FACTURACION']['FUNCIONALIDAD']))        {        $roles = array();        foreach ($data['FACTURACION']['FUNCIONALIDAD'] as $funcionalidad) {           $roles[] = array('ID_ROL'=>$idRol,'ID_FUNCIONALIDAD'=>$funcionalidad );        }        $this->db->insert_batch('admin_rol_funcionalidad', $roles);        }        if(isset($data['CONFIGURACION']) && isset($data['CONFIGURACION']['FUNCIONALIDAD']))        {        $roles = array();        foreach ($data['CONFIGURACION']['FUNCIONALIDAD'] as $funcionalidad) {           $roles[] = array('ID_ROL'=>$idRol,'ID_FUNCIONALIDAD'=>$funcionalidad );        }        $this->db->insert_batch('admin_rol_funcionalidad', $roles);        }    }    public function eliminarFuncionalidadesARol($idRol) {        $this->db->delete('admin_rol_funcionalidad', array('ID_ROL' => $idRol));     }        public function crear_actualizar_rol_transaccional($idRol,$data) {         $this->db->trans_start();         if($idRol == NULL)         {            $idRol = $this->crearRol(array('ROL'=>$data['ROL']));         }         else         {             $this->actualizarRol(array('ROL'=>$data['ROL']),$idRol);         }         $this->eliminarFuncionalidadesARol($idRol);         $this->agregarFuncionalidadesARol($idRol, $data);        $this->db->trans_complete();    }        public function buscar_roles_x_denominacion($denominacion) {        if ($denominacion) {            $this->db->select('*');            $this->db->from('admin_roles');            $this->db->where('admin_roles.ROL', $denominacion);            $query = $this->db->get();            return $query->row_array();        } else {            return NULL;        }    }}